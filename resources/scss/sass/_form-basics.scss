@mixin input-style {
    border: 1px solid;
    border-color: #181818 transparent #2d2d2d transparent;
    border-width: 1px 0;
    color: $white;
    margin: 0;
    padding: 5px 8px;

    @include border-radius(3px);
    @include background(linear-gradient(top, #1f1f1f, #2c2c2c));
    @include box-sizing(border-box);
    @include box-shadow(0 1.5px 1px rgba(#FFF, 0.1));


    &:focus {
        background: #1f1f1f;
        outline: 1px solid rgba(#0fb6ff, 0.8);
        outline-offset: 0px;
    }

    &:hover {
        background: #1f1f1f;
        cursor: pointer;
    }
}

@mixin default-input-style {
    border: 1px solid;
    border-color: #161616 #222222 #242424;
    background-color: #262626;
    background-repeat: no-repeat;
    
    color: #FFF;
    
    @include border-radius(3px);
    @include box-shadow(0 1px 0 rgba(#FFF, 0.1));
    @include box-sizing(border-box);
    
    &:focus {
        background: #1f1f1f;
        @include default-input-style-focused;
    }
    
    &:disabled {
        @include default-input-style-disabled;
    }

    &:hover {
        background: #1f1f1f;
    }
}

@mixin default-input-style-focused {
    outline: 0 none;
    @include box-shadow(0 0 3px rgba(#FFF, 1));
}

@mixin default-input-style-disabled {
    background: transparent;
    color: #999;
}

/* Inputs
------------------------------ */
input {
    vertical-align: middle
}

input,
textarea {
    @include default-input-style;

    font-family: $sansFontFamily;
    font-size: 1em;
    margin: 0;
    padding: 5px;
    line-height: 1;
    height: 30px;
}

textarea {
    height: auto;
}

input[readonly],
select[readonly],
textarea[readonly] {
    background-color: #444;
}

option {
    padding-left: 3px;
}

optgroup {
    font: inherit;
    font-style: normal;
    font-weight: bold;
    padding-left: 3px;
}

optgroup > option {
    padding-left: 10px;
}

input[type="text"]:focus {
}

input[type="checkbox"],
input[type="radio"] {
    vertical-align: middle;
    margin: 0;
}

// Position radios and checkboxes better
input[type="radio"],
input[type="checkbox"] {
    margin: 1px 0 0;
    margin-top: 1px \9; /* IE8-9 */
    line-height: normal;
    cursor: pointer;
}

// Reset width of input images, buttons, radios, checkboxes
input[type="file"],
input[type="image"],
input[type="submit"],
input[type="reset"],
input[type="button"],
input[type="radio"],
input[type="checkbox"] {
    width: auto; // Override of generic input selector
}

.invalid-field {
    @include box-shadow(0 0 1.5px 1px rgba(#F00, 0.9));
}

.f-row {
    display: block;
    margin: 0 0 10px 0;
}

.f-inputs {
    display: block;
}

.f-hint {
    font-size: 10px;
    color: $silver;
    margin: 0;
    font-style: italic;
}

.f-label {
    display: block;
    margin: 0 0 5px 0;
    color: $white;

}

.reqired-field {
    .f-label {
        font-weight: bold;
    }
    .f-label:after {
        content: ' *';
        font-weight: bold;
    }
}
// CHECKBOXES & RADIOS
// -------------------

// Indent the labels to position radios/checkboxes as hanging
.check-label {
    min-height: 16px; // clear the floating input if there is no label text
    display: block;
    cursor: pointer;
    
    input[type=radio],
    input[type=checkbox] {
        opacity: 0;
        margin: 0;
        width: 16px;
        height: 16px;
    }
    
    .box-label {
        vertical-align: middle;
        margin-left: -16px;
        line-height: 15px;
        
        &:before {
            content: '';
            display: inline-block;
            width: 15px;
            height: 15px;
            line-height: 15px;
            @include default-input-style;
            margin-right: 8px;
            vertical-align: top;
        }
    }
    
    input[type=radio] + .box-label {
        &:before {
            @include border-radius(100%);
        }    
    }
    
    input[type=radio]:checked + .box-label {
        color: #FFF;
        &:before {
            background-image: url(../images/check_controls.png);
            background-position:0 1px;
        }
    }    
    
    input[type=checkbox]:checked + .box-label {
        color: #FFF;
        &:before {
            background-image: url(../images/check_controls.png);
            background-position:0 -14px;
        }
    }    
    input[type=checkbox]:active + .box-label,
    input[type=radio]:active + .box-label,
    input[type=checkbox]:focus + .box-label,
    input[type=radio]:focus + .box-label,
    input[type=checkbox]:focus:checked + .box-label,
    input[type=radio]:focus:checked + .box-label {        
        &:before {
            @include default-input-style-focused;
        }
    }

    &:hover .box-label {
        &:before {
            @include default-input-style-focused;
        }
    }    
}



.checkbox-group {
    .check-label {
        display: block;
        margin: 0 0 10px 0;
    }
    
    .check-label:last-child {
        margin: 0
    }
}

.layout-inline {
    .check-label {
        display: inline-block;
        margin: 0 15px 0 0;
    }
    .check-label:last-child {
        margin: 0
    }
}

.styled-select {

    @include default-input-style;

    display: inline-block;
    position: relative;

    vertical-align: top;

    .select-value {
        position: absolute;
        top: -1px;
        left: 0;
        width: 100%;
        display: block;
        cursor: pointer;
        padding: 5px;
        line-height: 28px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        padding-right: 20px;
        @include box-sizing(border-box);
    }

    select {
        width: 100%!important;
        height: 100%!important;
        opacity: 0;
        cursor: pointer;
    }

    .select-value:after {
        content: '';
        display: inline-block;
        width: 0;
        height: 0;
        border: 4px solid;
        border-color: #666 transparent transparent;
        position: absolute;
        vertical-align: baseline;
        top: 10px;
        right: 8px;
    }

    &.focused {
        @include default-input-style-focused;
        
        .select-value:after {
            border-color: #FFF transparent transparent;
        }
    }

    &:hover {
        cursor: pointer;

        .select-value:after {
            border-color: #CCC transparent transparent;
        }
    }
}